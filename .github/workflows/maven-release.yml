# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
    - main
    - um-lib-v1-release
env:
  RELEASE_PREFIX: um-lib version 
  
jobs:
  release:
      runs-on: ubuntu-latest
      
      steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          server-id: github
          
      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          
      - name: Set Release name
        run: |
          RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo RELEASE_VERSION="${RELEASE_VERSION/-SNAPSHOT/}" >> $GITHUB_ENV
          echo RELEASE_NAME=${{ env.RELEASE_PREFIX }} "${RELEASE_VERSION/-SNAPSHOT/}" >> $GITHUB_ENV
          
      - name: Maven Release
        run: mvn -B release:prepare release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
          
      - name: Delete tag created by maven release plugin
        run: |
          git push origin --delete ${{ steps.previoustag.outputs.tag }} 
          
      - name: Action release          
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_NAME }}
